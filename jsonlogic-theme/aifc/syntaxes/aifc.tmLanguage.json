{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "AifC",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#not-supported-operators"
		},
		
		{
			"include": "#predefined-types"
		},
		{
			"include": "#timespan"
		},
		{
			"include": "#known-functions"
		},
		{
			"include": "#payloads"
		},
		{
			"include" : "#booleans"
		}
	],
	"repository": {
		"booleans" : {
			"name": "booleans",
			"patterns": [{
				"name" : "constant.numeric",
				"match": "\\b(true|false)\\b"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.aifc",
				"match": "\\b(import|if|else|switch|as|null|undefined|in|this|accumulator|current|not|let)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.aifc",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "markup.italic",
					"match": "\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d+)?)?(([+-]\\d{2}(:\\d{2})?)|Z)?)?"
				},
				{
					"name": "constant.character.escape.aifc",
					"match": "\\\\."
				}
			]
		},
		"comments" : {
			"name": "comment",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{
					"name": "comment.block",
					"match": "\\\\."
				}
			]
		},
		"operators" : {
			"name" : "keyword.operator",
			"patterns": [
				{
					"name" : "keyword.operator",
					"match": "(>=|<=|<|(?<!=)>|===|and|&&|\\+|\\-|is\\s+before|(is\\s+)?not\\s+before|is\\s+after|(is\\s+)?not\\s+after)"
				}
			]
		},
		"not-supported-operators": {
			"name": "invalid.deprecated",
			"patterns": [{
				"name": "invalid.deprecated",
				"match": "(!=|==|or)"
			}]
		},
		"predefined-types": {
			"name": "entity.name.type",
			"patterns": [
				{
					"name" : "entity.name.type",
					"match": "\\b(DateTime|Boolean|String)\\b"
				}
			]
		},
		"timespan" : {
			"name" : "constant.language",
			"patterns": [
				{
					"name" : "constant.numeric",
					"match": "\\d+\\#(years|year|months|month|weeks|week|days|day|hours|hour|minutes|minute|seconds|second)"
				}
			]
		},
		"known-functions" : {
			"name" : "entity.name.function",
			"patterns": [
				{
					"name" : "entity.name.function",
					"match" : "\\b(now|min)\\b"
				}
			]
		},
		"payloads" : {
			"name" : "markup.underline",
			"patterns" : [
				{
					"name" : "markup.underline",
					"match" : "\\bpayload(\\.[A-z0-9_.]+)?"
				}
			]
		}
	},
	"scopeName": "source.aifc"
}